<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Factions and Figures</title>
    <link>/post/</link>
    <description>Recent content in Posts on Factions and Figures</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 07 Jun 2017 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>machine learning</title>
      <link>/2017/06/07/machine-learning/</link>
      <pubDate>Wed, 07 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>/2017/06/07/machine-learning/</guid>
      <description>The three methods of machine learning are: classification, clustering, and regression.
Classification is the easiest one to visualise, so we spent most of our time on that.
First tip was straight out of the school of Aidan: visualise your model in the data space, rather than just visualising your data in the model space:
I understood part of the method of classification as learning that defining characteristics from a history (a sample data set with known categories) and create a map in the data space to differentiate between the categories.</description>
    </item>
    
    <item>
      <title>dealing with missing data</title>
      <link>/2017/06/02/dealing-with-missing-data/</link>
      <pubDate>Fri, 02 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>/2017/06/02/dealing-with-missing-data/</guid>
      <description>We met a great guy, Nick, who is based out of Monash Uni. He’s made two cool packages that deal with missing data!
narnia
devtools::install_github(&amp;quot;njtierney/narnia&amp;quot;) library(narnia) and
visdat
devtools::install_github(&amp;quot;njtierney/visdat&amp;quot;) library(visdat) Might be useful for things like “HoursWorked” in H.</description>
    </item>
    
    <item>
      <title>association rules</title>
      <link>/2017/06/01/association-rules/</link>
      <pubDate>Thu, 01 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>/2017/06/01/association-rules/</guid>
      <description>Measuring the likeihood that two or more factor levels (categories) appear together in observation (row). You could imagine that Aidan would want to know how likely is it that a particular beers are purchased on the same bill…
 library(arules) rules.surv &amp;lt;- titanic.raw %&amp;gt;% apriori( control = list(verbose=F), parameter = list(minlen=2, supp=0.005, conf=0.8), appearance = list(rhs=c(&amp;quot;Survived=No&amp;quot;, &amp;quot;Survived=Yes&amp;quot;), default=&amp;quot;lhs&amp;quot;)) ## keep three decimal places quality(rules.surv) &amp;lt;- rules.surv %&amp;gt;% quality() %&amp;gt;% round(digits=3) ## sort rules by lift rules.</description>
    </item>
    
    <item>
      <title>rattle for machine learning</title>
      <link>/2017/06/01/rattle/</link>
      <pubDate>Thu, 01 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>/2017/06/01/rattle/</guid>
      <description>So we are getting to work on a virtual machine just to use some fast specs, 32 core CPU and 52Gb RAM… Should be fun…
a machine learning model (trying to predict whether it will rain based on historic data…) in four clicks
… a decision tree model:
Tips: Max depth is the amount of binary splits. Min bucket is the amount of data required for the model to include the category (ie exclude) rattle logs the R code which you can just run in Rstudio (Export)</description>
    </item>
    
    <item>
      <title>Melbourne Data Science Week 2017</title>
      <link>/2017/05/31/test/</link>
      <pubDate>Wed, 31 May 2017 00:00:00 +0000</pubDate>
      
      <guid>/2017/05/31/test/</guid>
      <description>Nathan, Aidan and I can now blog from R so we will put up some of the other content we went through here just for fun. Then afterwards we can use it for Factions and Figures…
For example, some cool packages:
library(plotly) library(sf) And there were stickers…
 </description>
    </item>
    
  </channel>
</rss>