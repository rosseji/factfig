<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>#Stats on Factions and Figures</title>
    <link>/categories/#stats/</link>
    <description>Recent content in #Stats on Factions and Figures</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 25 Jun 2017 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/categories/#stats/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>ARIMA and TBATS</title>
      <link>/2017/06/25/arima-and-random-walk/</link>
      <pubDate>Sun, 25 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>/2017/06/25/arima-and-random-walk/</guid>
      <description>And the forecasting begins
ARIMA We can build ARIMA using the auto.arima function from the forecast package
fit.arima &amp;lt;- auto.arima(y) print(fit.arima) ## Series: y ## ARIMA(1,1,1)(0,1,0)[12] ## ## Coefficients: ## ar1 ma1 ## 0.3698 -0.8957 ## s.e. 0.1780 0.1001 ## ## sigma^2 estimated as 8754: log likelihood=-279.46 ## AIC=564.92 AICc=565.48 BIC=570.47 # We produce the forecast in a similar way f.arima &amp;lt;- forecast(fit.arima,h=12) plot(f.arima) lines(y.test,col=&amp;quot;red&amp;quot;) TBATS (stands for something…)
Similar to ETS, TBATS also offers a decomposition of the series Works with hourly and daily data!</description>
    </item>
    
    <item>
      <title>Intermittent demand forecasting</title>
      <link>/2017/06/25/intermittent-demand-forecasting/</link>
      <pubDate>Sun, 25 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>/2017/06/25/intermittent-demand-forecasting/</guid>
      <description>Intermittent demand forecasting
Like… Slow moving items, like bottles of wine?
setwd(&amp;quot;/Users/rosseji/Dropbox/TrendLock/ISF/forecasting with R/&amp;quot;) ts1.test &amp;lt;- ts(scan(&amp;quot;ts1out.txt&amp;quot;), start=c(2016,1), frequency=4) ts2.test &amp;lt;- ts(scan(&amp;quot;ts2out.txt&amp;quot;), start=c(2016,1), frequency=12) # Load the necessary library library(tsintermittent) ## Loading required package: MAPA ## Loading required package: forecast ## Loading required package: parallel ## Loading required package: RColorBrewer ## Loading required package: smooth ## This is package &amp;quot;smooth&amp;quot;, v1.9.9 # Load the third time series y &amp;lt;- ts(scan(&amp;quot;ts3.txt&amp;quot;), start=c(2011,1), frequency=12) y.</description>
    </item>
    
    <item>
      <title>Rgression techniques</title>
      <link>/2017/06/25/rgression-techniques/</link>
      <pubDate>Sun, 25 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>/2017/06/25/rgression-techniques/</guid>
      <description>Causal forecasting with regression
Annoyingly have to print all the code together becuase they don’t want to use ggplot…
Some more complex data, data with spikes that might be caused by promotions:
setwd(&amp;quot;/Users/rosseji/Dropbox/TrendLock/ISF/forecasting with R/&amp;quot;) sales &amp;lt;- scan(&amp;quot;sales.txt&amp;quot;) # Plot the sales as a line plot(sales, type=&amp;quot;l&amp;quot;, xlab=&amp;quot;Weeks&amp;quot;, ylab=&amp;quot;Sales&amp;quot;) # Save the length of the sales into a variable n &amp;lt;- length(sales) # Scan the promotional data and save into a data frame promos &amp;lt;- data.</description>
    </item>
    
  </channel>
</rss>